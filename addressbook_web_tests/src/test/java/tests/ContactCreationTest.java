package tests;// Generated by Selenium IDE

import model.ContactData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.ArrayList;
import java.util.List;

public class ContactCreationTest extends TestBase{

    public static List<ContactData> contactProvider() {
        var result = new ArrayList<ContactData>();
        for (var firstname : List.of("", "Name")) {
            for (var lastname : List.of("", "lastname")) {
                for (var address : List.of("", "address")) {
                    for (var phone : List.of("", "phone")) {
                        for (var email : List.of("", "email")) {
                            result.add(new ContactData()
                                    .withFirstname(firstname)
                                    .withFirstname(lastname)
                                    .withAddress(address)
                                    .withPhone(phone)
                                    .withEmail((email)));
                }
            }
        }
        for( int i = 0; i < 5; i++) {
            result.add(new ContactData()
                            .withFirstname(randomString(i * 10))
                            .withLastname(randomString(i * 10))
                            .withAddress(randomString(i * 10))
                            .withPhone(randomString(i * 10))
                            .withEmail(randomString(i * 10))
            ));
        }
        return result;
    }

    @ParameterizedTest
    @MethodSource("contactProvider")
    public void canCreateMultipleContacts(ContactData contact) {
        int contactCount = app.contacts().getCountContact();
        app.contacts().createContact(contact);
        int newContactCount = app.contacts().getCountContact();
        Assertions.assertEquals(contactCount + 1, newContactCount);
    }


    public static List<ContactData> negativeContactProvider() {
        var result = new ArrayList<ContactData>(List.of(
                new ContactData("", "Static Name' ", "", "", "", "")));
        return result;
    }

    @ParameterizedTest
    @MethodSource("negativeContactProvider")
    public void canNotCreateContact(ContactData contact) {
        int contactCount = app.contacts().getCountContact();
        app.contacts().createContact(contact);
        int newContactCount = app.contacts().getCountContact();
        Assertions.assertEquals(contactCount, newContactCount);
    }
}